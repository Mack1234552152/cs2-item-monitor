name: CS2中文价格监控 (已修复)

on:
  schedule:
    # 每30分钟运行一次
    - cron: '*/30 * * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  chinese-monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    
    steps:
    - name: 获取当前IP地址
      id: ip
      run: |
        IP=$(curl -s https://ipinfo.io/ip)
        echo "current_ip=$IP" >> $GITHUB_OUTPUT
        echo "当前IP: $IP"
        
    - name: 绑定IP到CSQAQ
      run: |
        echo "=== 🔗 绑定IP到CSQAQ API ==="
        echo "IP地址: ${{ steps.ip.outputs.current_ip }}"
        
        response=$(curl -s -w "HTTP_CODE:%{http_code}" \
          -X POST "https://api.csqaq.com/api/v1/auth/bind_ip" \
          -H "ApiToken: JOVN71P7T388E2N1G1H6W5A0" \
          -H "Content-Type: application/json" \
          -d "{
            \"ip_address\": \"${{ steps.ip.outputs.current_ip }}\",
            \"remark\": \"GitHub Actions中文监控 - $(date)\"
          }")
        
        echo "IP绑定响应: $response"
        
    - name: 等待IP绑定生效
      run: |
        echo "等待10秒让IP绑定生效..."
        sleep 10
        
    - name: 获取AK-47红线价格数据
      id: price_data
      run: |
        echo "=== 📊 获取AK-47红线价格数据 ==="
        
        # 使用搜索功能获取AK-47红线数据
        response=$(curl -s -w "HTTP_CODE:%{http_code}" \
          -X POST "https://api.csqaq.com/api/v1/goods/get_all_goods_info" \
          -H "ApiToken: JOVN71P7T388E2N1G1H6W5A0" \
          -H "Content-Type: application/json" \
          -d '{
            "search": "AK-47",
            "limit": 5,
            "page": 1
          }')
        
        echo "API完整响应: $response"
        
        # 提取关键信息用于通知
        if [[ $response == *"price"* ]] || [[ $response == *"Steam"* ]]; then
          echo "found_data=true" >> $GITHUB_OUTPUT
          echo "✅ 成功获取价格数据"
        else
          echo "found_data=false" >> $GITHUB_OUTPUT
          echo "⚠️ 数据获取有问题，但继续发送通知"
        fi
        
    - name: 获取悠悠有品具体价格
      id: youyoupin_data
      run: |
        echo "=== 🛒 获取悠悠有品价格 ==="
        
        # 尝试获取悠悠有品的AK-47红线数据
        response=$(curl -s \
          -X POST "https://api.csqaq.com/api/v1/goods/get_all_goods_info" \
          -H "ApiToken: JOVN71P7T388E2N1G1H6W5A0" \
          -H "Content-Type: application/json" \
          -d '{
            "search": "AK-47",
            "platform": "youyoupin",
            "limit": 3,
            "page": 1
          }')
        
        echo "悠悠有品响应: $response"
        
        # 提取价格信息
        if [[ $response == *"youyoupin_price"* ]]; then
          echo "has_youyoupin=true" >> $GITHUB_OUTPUT
          # 简单提取价格数字
          price=$(echo "$response" | grep -o '"youyoupin_price":[0-9.]*' | cut -d':' -f2)
          if [[ ! -z "$price" ]]; then
            echo "youyoupin_price=$price" >> $GITHUB_OUTPUT
            echo "悠悠有品价格: ¥$price"
          fi
        else
          echo "has_youyoupin=false" >> $GITHUB_OUTPUT
          echo "无法获取悠悠有品价格"
        fi
        
    - name: 获取BUFF价格
      id: buff_data
      run: |
        echo "=== 🎮 获取BUFF价格 ==="
        
        response=$(curl -s \
          -X POST "https://api.csqaq.com/api/v1/goods/get_all_goods_info" \
          -H "ApiToken: JOVN71P7T388E2N1G1H6W5A0" \
          -H "Content-Type: application/json" \
          -d '{
            "search": "AK-47",
            "platform": "buff",
            "limit": 3,
            "page": 1
          }')
        
        echo "BUFF响应: $response"
        
        if [[ $response == *"buff_price"* ]]; then
          echo "has_buff=true" >> $GITHUB_OUTPUT
          price=$(echo "$response" | grep -o '"buff_price":[0-9.]*' | cut -d':' -f2)
          if [[ ! -z "$price" ]]; then
            echo "buff_price=$price" >> $GITHUB_OUTPUT
            echo "BUFF价格: ¥$price"
          fi
        else
          echo "has_buff=false" >> $GITHUB_OUTPUT
          echo "无法获取BUFF价格"
        fi
        
    - name: 发送中文饰品价格监控通知
      run: |
        echo "=== 📱 发送中文饰品价格监控通知 ==="
        echo "监控时间: $(date '+%Y年%m月%d日 %H:%M:%S')"
        echo "当前IP: ${{ steps.ip.outputs.current_ip }}"
        
        # 构建价格信息
        youyoupin_price="${{ steps.youyoupin.outputs.youyoupin_price || 'N/A' }}"
        buff_price="${{ steps.buff_data.outputs.buff_price || 'N/A' }}"
        
        # 发送中文通知
        response=$(curl -s -X POST "https://wxpusher.zjiecode.com/api/send/message" \
          -H "Content-Type: application/json" \
          -d '{
            "appToken": "AT_oVgZnjiSqzzv1ycEbihcgjtoM4BggMjz",
            "content": "🔫 CS2饰品价格监控\n\n⏰ 监控时间: '$(date +%Y年%m月%d日\ %H:%M:%S)'\n📍 当前IP: ${{ steps.ip.outputs.current_ip }}\n🎯 监控饰品: AK-47 | 红线\n\n📊 各平台价格:\n🛒 悠悠有品: ${{ steps.youyoupin.outputs.youyoupin_price || '' }}元\n🎮 BUFF: ${{ steps.buff_data.outputs.buff_price || '' }}元\n🚂 Steam: API查询中...\n\n🏪 数据来源: CSQAQ官方API\n✅ 监控状态: 正常运行\n📅 下次检查: '$(date -d '+30 minutes' +%H:%M')'",
            "summary": "CS2饰品监控 - AK-47红线",
            "contentType": 1,
            "uids": ["UID_Nkv98Q7XEQcDsvSInIlR10nm33xI"]
          }')
        
        echo "WXpusher响应: $response"
        
        # 检查结果
        if [[ $response == *"code":1000* ]]; then
          echo "✅ 中文监控通知发送成功!"
        else
          echo "❌ 中文监控通知发送失败"
          echo "响应: $response"
        fi
        
    - name: 执行摘要
      if: always()
      run: |
        echo "## 📊 中文监控执行摘要" >> $GITHUB_STEP_SUMMARY
        echo "- **执行时间**: $(date '+%Y年%m月%d日 %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
        echo "- **当前IP**: ${{ steps.ip.outputs.current_ip }}" >> $GITHUB_STEP_SUMMARY
        echo "- **监控饰品**: AK-47 | 红线" >> $GITHUB_STEP_SUMMARY
        echo "- **悠悠有品价格**: ¥${{ steps.youyoupin.outputs.youyoupin_price || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **BUFF价格**: ¥${{ steps.buff_data.outputs.buff_price || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **通知语言**: 中文" >> $GITHUB_STEP_SUMMARY
        echo "- **通知状态**: 已发送" >> $GITHUB_STEP_SUMMARY
        echo "- **监控频率**: 每30分钟" >> $GITHUB_STEP_SUMMARY