name: WXpusher Notification Test

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Test type'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - simple
          - price_alert
          - app_info

jobs:
  test-wxpusher:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create test config
      run: |
        cat > config/config.json << EOF
        {
          "api": {
            "csqaq": {
              "baseUrl": "https://api.csqaq.com/api/v1",
              "token": "JOVN71P7T388E2N1G1H6W5A0",
              "whitelist_ip": "111.19.113.82"
            }
          },
          "notification": {
            "wxpusher": {
              "appToken": "${{ secrets.WXPUSHER_APP_TOKEN }}",
              "baseUrl": "https://wxpusher.zjiecode.com"
            }
          }
        }
        EOF
        
    - name: Check WXpusher configuration
      run: |
        echo "## 🔧 WXpusher配置检查" >> $GITHUB_STEP_SUMMARY
        if [ -z "${{ secrets.WXPUSHER_APP_TOKEN }}" ]; then
          echo "❌ WXPUSHER_APP_TOKEN 未配置" >> $GITHUB_STEP_SUMMARY
          echo "请在GitHub Secrets中添加WXPUSHER_APP_TOKEN" >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ WXPUSHER_APP_TOKEN 已配置" >> $GITHUB_STEP_SUMMARY
          echo "Token长度: $(echo -n "${{ secrets.WXPUSHER_APP_TOKEN }}" | wc -c)" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Create required directories
      run: |
        mkdir -p data logs config
        
    - name: Run WXpusher test
      id: wxpusher-test
      continue-on-error: true
      run: |
        echo "🧪 开始WXpusher集成测试..."
        echo "测试类型: ${{ github.event.inputs.test_type || 'all' }}"
        echo "测试时间: $(date)"
        echo "================================================"
        
        # 设置环境变量供测试脚本使用
        export TEST_TYPE="${{ github.event.inputs.test_type || 'all' }}"
        
        # 运行测试脚本
        timeout 120s node scripts/test-wxpusher.js
        
    - name: Show test results
      if: always()
      run: |
        echo "## 📊 WXpusher测试结果" >> $GITHUB_STEP_SUMMARY
        echo "- **测试时间**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **测试类型**: ${{ github.event.inputs.test_type || 'all' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **执行状态**: ${{ steps.wxpusher-test.outcome }}" >> $GITHUB_STEP_SUMMARY
        echo "- **配置状态**: ${{ secrets.WXPUSHER_APP_TOKEN != '' && '✅ 已配置' || '❌ 未配置' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔍 故障排除说明:" >> $GITHUB_STEP_SUMMARY
        echo "1. 确认WXPUSHER_APP_TOKEN在GitHub Secrets中正确配置" >> $GITHUB_STEP_SUMMARY
        echo "2. 检查微信是否关注了WXpusher公众号" >> $GITHUB_STEP_SUMMARY
        echo "3. 确认WXpusher应用配置正确" >> $GITHUB_STEP_SUMMARY
        echo "4. 查看上面的日志输出获取详细错误信息" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: wxpusher-test-logs-${{ github.run_number }}
        path: |
          logs/
        retention-days: 3
        if-no-files-found: ignore