name: CS2 Price Monitor

on:
  schedule:
    # 每5分钟运行一次
    - cron: '*/5 * * * *'
    # 每天早上8点运行日报
    - cron: '0 8 * * *'
    # 每周日凌晨2点运行维护
    - cron: '0 2 * * 0'
  
  # 允许手动触发
  workflow_dispatch:
  
  # 每次推送到main分支时也运行（用于测试）
  push:
    branches: [ main ]

jobs:
  price-monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create config with secrets
      run: |
        # 创建包含敏感信息的配置文件
        cat > config/config.json << EOF
        {
          "api": {
            "csqaq": {
              "baseUrl": "https://api.csqaq.com",
              "token": "${{ secrets.CSQAQ_TOKEN }}",
              "whitelist_ip": "${{ secrets.CSQAQ_WHITELIST_IP }}"
            }
          },
          "notification": {
            "wxpusher": {
              "appToken": "${{ secrets.WXPUSHER_APP_TOKEN }}",
              "baseUrl": "https://wxpusher.zjiecode.com"
            }
          },
          "monitor": {
            "interval": 300000,
            "platforms": ["youyoupin", "buff", "steam"],
            "priceThreshold": 0.95,
            "retryAttempts": 3,
            "retryDelay": 5000
          },
          "storage": {
            "dataPath": "./data/price-history.json",
            "maxHistoryDays": 30
          },
          "logging": {
            "level": "info",
            "file": "logs/monitor.log"
          }
        }
        EOF
        
    - name: Create data directory
      run: mkdir -p data logs
      
    - name: Restore price history data
      uses: actions/cache/restore@v4
      with:
        path: data/price-history.json
        key: price-history-${{ github.run_id }}
        restore-keys: |
          price-history-
          
    - name: Run price monitor
      run: npm start
      env:
        GITHUB_ACTIONS: true
        
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: monitor-logs-${{ github.run_number }}
        path: logs/
        retention-days: 7
        
    - name: Save price history data
      uses: actions/cache/save@v4
      if: always()
      with:
        path: data/price-history.json
        key: price-history-${{ github.run_id }}

  # 每日报告任务
  daily-report:
    runs-on: ubuntu-latest
    # 只在定时任务或手动触发时运行
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create config with secrets
      run: |
        cat > config/config.json << EOF
        {
          "api": {
            "csqaq": {
              "baseUrl": "https://api.csqaq.com",
              "token": "${{ secrets.CSQAQ_TOKEN }}",
              "whitelist_ip": "${{ secrets.CSQAQ_WHITELIST_IP }}"
            }
          },
          "notification": {
            "wxpusher": {
              "appToken": "${{ secrets.WXPUSHER_APP_TOKEN }}",
              "baseUrl": "https://wxpusher.zjiecode.com"
            }
          },
          "monitor": {
            "interval": 300000,
            "platforms": ["youyoupin", "buff", "steam"],
            "priceThreshold": 0.95,
            "retryAttempts": 3,
            "retryDelay": 5000
          },
          "storage": {
            "dataPath": "./data/price-history.json",
            "maxHistoryDays": 30
          },
          "logging": {
            "level": "info",
            "file": "logs/monitor.log"
          }
        }
        EOF
        
    - name: Restore price history data
      uses: actions/cache/restore@v4
      with:
        path: data/price-history.json
        key: price-history-
        restore-keys: |
          price-history-
          
    - name: Generate daily report
      run: node -e "
        const PriceMonitor = require('./src/monitor/priceMonitor');
        const monitor = new PriceMonitor();
        monitor.generateDailyReport().then(() => {
          console.log('Daily report generated');
        }).catch(err => {
          console.error('Failed to generate daily report:', err);
          process.exit(1);
        });
      "

  # 系统维护任务
  maintenance:
    runs-on: ubuntu-latest
    # 只在定时任务或手动触发时运行
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create config with secrets
      run: |
        cat > config/config.json << EOF
        {
          "api": {
            "csqaq": {
              "baseUrl": "https://api.csqaq.com",
              "token": "${{ secrets.CSQAQ_TOKEN }}",
              "whitelist_ip": "${{ secrets.CSQAQ_WHITELIST_IP }}"
            }
          },
          "notification": {
            "wxpusher": {
              "appToken": "${{ secrets.WXPUSHER_APP_TOKEN }}",
              "baseUrl": "https://wxpusher.zjiecode.com"
            }
          },
          "monitor": {
            "interval": 300000,
            "platforms": ["youyoupin", "buff", "steam"],
            "priceThreshold": 0.95,
            "retryAttempts": 3,
            "retryDelay": 5000
          },
          "storage": {
            "dataPath": "./data/price-history.json",
            "maxHistoryDays": 30
          },
          "logging": {
            "level": "info",
            "file": "logs/monitor.log"
          }
        }
        EOF
        
    - name: Restore price history data
      uses: actions/cache/restore@v4
      with:
        path: data/price-history.json
        key: price-history-
        restore-keys: |
          price-history-
          
    - name: Perform maintenance
      run: node -e "
        const PriceMonitor = require('./src/monitor/priceMonitor');
        const monitor = new PriceMonitor();
        monitor.performMaintenance().then(() => {
          console.log('Maintenance completed');
        }).catch(err => {
          console.error('Maintenance failed:', err);
          process.exit(1);
        });
      "
      
    - name: Save cleaned data
      uses: actions/cache/save@v4
      if: always()
      with:
        path: data/price-history.json
        key: price-history-maintenance-${{ github.run_id }}