name: Debug Test

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    
    steps:
    - name: Basic Environment Test
      run: |
        echo "=== 基本环境测试 ==="
        echo "Node.js版本:"
        node --version
        echo "npm版本:"
        npm --version
        echo "当前目录:"
        pwd
        echo "目录内容:"
        ls -la
        
    - name: Install Dependencies Test  
      run: |
        echo "=== 依赖安装测试 ==="
        npm install axios
        echo "axios安装状态: $?"
        
    - name: Create Simple Config
      run: |
        echo "=== 创建简单配置 ==="
        mkdir -p config
        echo '{"test": "value"}' > config/test.json
        echo "配置文件内容:"
        cat config/test.json
        
    - name: Test WXpusher Direct
      run: |
        echo "=== 直接测试WXpusher ==="
        response=$(curl -s -X POST "https://wxpusher.zjiecode.com/api/send/message" \
          -H "Content-Type: application/json" \
          -d '{
            "appToken": "AT_MGRDCtFJyM0GSpNDL5Kx3veU7WVpc3nj",
            "content": "🔧 Debug测试 - 直接curl调用\n\n⏰ 时间: '"$(date)"'\n✅ 测试状态: 运行中",
            "summary": "Debug测试通知",
            "contentType": 1,
            "uids": ["UID_Nkv98Q7XEQcDsvSInIlR10nm33xI"]
          }')
        
        echo "API响应: $response"
        
        if echo "$response" | grep -q '"code":1000'; then
          echo "✅ WXpusher直接调用成功"
          echo "## 🎉 Debug测试结果" >> $GITHUB_STEP_SUMMARY
          echo "- **WXpusher测试**: ✅ 成功" >> $GITHUB_STEP_SUMMARY
          echo "- **响应**: $response" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ WXpusher直接调用失败"
          echo "## ❌ Debug测试结果" >> $GITHUB_STEP_SUMMARY
          echo "- **WXpusher测试**: ❌ 失败" >> $GITHUB_STEP_SUMMARY  
          echo "- **响应**: $response" >> $GITHUB_STEP_SUMMARY
          echo "## 🔍 错误分析" >> $GITHUB_STEP_SUMMARY
          echo "- **AppToken**: AT_MGRDCtFJyM0GSpNDL5Kx3veU7WVpc3nj" >> $GITHUB_STEP_SUMMARY
          echo "- **UID**: UID_Nkv98Q7XEQcDsvSInIlR10nm33xI" >> $GITHUB_STEP_SUMMARY
          echo "- **可能原因**: AppToken无效、UID错误或API限制" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Test Basic Node.js Script
      run: |
        echo "=== 测试基础Node.js脚本 ==="
        
        cat > test-script.js << 'EOF'
        console.log('开始Node.js测试...');
        
        try {
          const https = require('https');
          const http = require('http');
          
          console.log('✅ Node.js模块加载正常');
          
          // 测试HTTPS请求
          const testData = JSON.stringify({
            appToken: 'AT_MGRDCtFJyM0GSpNDL5Kx3veU7WVpc3nj',
            content: '🔧 Node.js测试\n⏰ 时间: ' + new Date().toLocaleString(),
            summary: 'Node.js HTTPS测试',
            contentType: 1,
            uids: ['UID_Nkv98Q7XEQcDsvSInIlR10nm33xI']
          });
          
          const options = {
            hostname: 'wxpusher.zjiecode.com',
            port: 443,
            path: '/api/send/message',
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Content-Length': Buffer.byteLength(testData)
            }
          };
          
          const req = https.request(options, (res) => {
            console.log('状态码:', res.statusCode);
            console.log('响应头:', res.headers);
            
            let data = '';
            res.on('data', (chunk) => {
              data += chunk;
            });
            
            res.on('end', () => {
              console.log('响应体:', data);
              try {
                const result = JSON.parse(data);
                if (result.code === 1000) {
                  console.log('✅ Node.js HTTPS请求成功!');
                  process.exit(0);
                } else {
                  console.log('❌ API返回错误:', result);
                  process.exit(1);
                }
              } catch (e) {
                console.log('❌ JSON解析失败:', e.message);
                process.exit(2);
              }
            });
          });
          
          req.on('error', (e) => {
            console.error('❌ 请求失败:', e.message);
            process.exit(3);
          });
          
          req.write(testData);
          req.end();
          
        } catch (error) {
          console.error('❌ 脚本执行失败:', error.message);
          process.exit(4);
        }
        EOF
        
        echo "运行Node.js测试脚本..."
        node test-script.js
        script_result=$?
        
        echo "脚本退出码: $script_result"
        
        case $script_result in
          0) 
            echo "✅ Node.js测试成功"
            echo "- **Node.js测试**: ✅ 成功" >> $GITHUB_STEP_SUMMARY
            ;;
          1) 
            echo "❌ API返回错误"
            echo "- **Node.js测试**: ❌ API错误" >> $GITHUB_STEP_SUMMARY
            ;;
          2) 
            echo "❌ JSON解析失败"
            echo "- **Node.js测试**: ❌ JSON错误" >> $GITHUB_STEP_SUMMARY
            ;;
          3) 
            echo "❌ 网络请求失败"
            echo "- **Node.js测试**: ❌ 网络错误" >> $GITHUB_STEP_SUMMARY
            ;;
          4) 
            echo "❌ 脚本执行异常"
            echo "- **Node.js测试**: ❌ 脚本错误" >> $GITHUB_STEP_SUMMARY
            ;;
          *) 
            echo "❓ 未知错误"
            echo "- **Node.js测试**: ❓ 未知错误" >> $GITHUB_STEP_SUMMARY
            ;;
        esac