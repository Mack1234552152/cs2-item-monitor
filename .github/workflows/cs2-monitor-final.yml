name: CS2 Final Monitor

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
    - cron: '0 9 * * *'   # 每天上午9点额外运行一次
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Get current IP
      id: get-ip
      run: |
        current_ip=$(curl -s ifconfig.me)
        echo "Current IP: $current_ip"
        echo "IP=$current_ip" >> $GITHUB_OUTPUT
        
    - name: Bind IP to CSQAQ
      run: |
        echo "Binding IP: ${{ steps.get-ip.outputs.IP }}"
        
        response=$(curl -s -X POST "https://api.csqaq.com/api/v1/sys/bind_local_ip" \
          -H "Content-Type: application/json" \
          -H "ApiToken: JOVN71P7T388E2N1G1H6W5A0")
        
        echo "IP binding response: $response"
        
        if echo "$response" | grep -q '"code":200'; then
          echo "✅ IP binding successful!"
          bound_ip=$(echo "$response" | grep -o '当前绑定IP为：[^"]*' | cut -d'：' -f2)
          echo "Bound IP: $bound_ip"
        else
          echo "❌ IP binding failed"
          exit 1
        fi
        
    - name: Wait for IP binding to take effect
      run: |
        echo "Waiting for IP binding to take effect (30 seconds)..."
        for i in {30..1}; do
          echo "Waiting... $i seconds"
          sleep 1
        done
        echo "✅ Waiting complete, fetching data"
        
    - name: Fetch CS2 Data
      run: |
        echo "Fetching CSQAQ data..."
        
        # 获取CSQAQ数据
        api_response=$(curl -s -X GET "https://api.csqaq.com/api/v1/current_data")
        
        if echo "$api_response" | grep -q '"code":200'; then
          echo "✅ Data fetch successful!"
          
          # 解析数据
          market_index=$(echo "$api_response" | grep -o '"market_index":[^,]*' | head -1 | cut -d':' -f2 | tr -d '" ')
          chg_rate=$(echo "$api_response" | grep -o '"chg_rate":[^,]*' | head -1 | cut -d':' -f2)
          online_players=$(echo "$api_response" | grep -o '"current_number":[^,}]*' | cut -d':' -f2)
          
          echo "Market Index: $market_index"
          echo "Change Rate: $chg_rate%"
          echo "Online Players: $online_players"
          
          # 构建通知内容
          notification_content="CS2饰品价格监控更新

当前饰品指数: $market_index
涨跌幅: $chg_rate%
在线人数: $online_players人
更新时间: $(date '+%Y-%m-%d %H:%M:%S')
监控状态: 正常运行

IP地址: ${{ steps.get-ip.outputs.IP }}"
          
          # 发送成功通知
          curl -s -X POST "https://wxpusher.zjiecode.com/api/send/message" \
            -H "Content-Type: application/json" \
            -d "{
              \"appToken\": \"AT_oVgZnjiSqzzv1ycEbihcgjtoM4BggMjz\",
              \"content\": \"$notification_content\",
              \"summary\": \"CS2 Price Update\",
              \"contentType\": 1,
              \"uids\": [\"UID_Nkv98Q7XEQcDsvSInIlR10nm33xI\"]
            }"
          
          echo "🎉 Monitoring task completed, notification sent!"
        else
          echo "❌ Data fetch failed"
          
          # 发送错误通知
          error_content="CS2 Monitor Failed

Status: Data fetch failed
IP: ${{ steps.get-ip.outputs.IP }}
Time: $(date '+%Y-%m-%d %H:%M:%S')
Error: API data retrieval failed

Please check the workflow logs"
          
          curl -s -X POST "https://wxpusher.zjiecode.com/api/send/message" \
            -H "Content-Type: application/json" \
            -d "{
              \"appToken\": \"AT_oVgZnjiSqzzv1ycEbihcgjtoM4BggMjz\",
              \"content\": \"$error_content\",
              \"summary\": \"CS2 Monitor Error\",
              \"contentType\": 1,
              \"uids\": [\"UID_Nkv98Q7XEQcDsvSInIlR10nm33xI\"]
            }"
          exit 1
        fi
        
    - name: System Info
      if: always()
      run: |
        echo "📊 Task execution information:"
        echo "⏰ Start time: $(date '+%Y-%m-%d %H:%M:%S')"
        echo "🖥️ Runner: ${{ runner.os }}"
        echo "📍 IP: ${{ steps.get-ip.outputs.IP }}"
        echo "📁 Working directory: $(pwd)"
        
        if [ "${{ job.status }}" = "success" ]; then
          echo "✅ Task status: Successfully completed"
        else
          echo "❌ Task status: Execution failed"
        fi